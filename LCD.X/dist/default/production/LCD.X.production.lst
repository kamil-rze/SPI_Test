

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Oct 11 22:37:06 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.42
    24                           ; Generated 13/04/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135                           
   136                           	psect	idataBANK0
   137  0621                     __pidataBANK0:	
   138                           
   139                           ;initializer for main@F1694
   140  0621  344C               	retlw	76
   141  0622  3432               	retlw	50
   142  0623  3420               	retlw	32
   143  0624  342D               	retlw	45
   144  0625  3420               	retlw	32
   145  0626  3443               	retlw	67
   146  0627  347A               	retlw	122
   147  0628  3465               	retlw	101
   148  0629  3473               	retlw	115
   149  062A  3463               	retlw	99
   150  062B  3420               	retlw	32
   151  062C  344B               	retlw	75
   152  062D  3475               	retlw	117
   153  062E  3462               	retlw	98
   154  062F  3461               	retlw	97
   155  0630  3421               	retlw	33
   156  0631  3400               	retlw	0
   157                           
   158                           ;initializer for main@F1692
   159  0632  344C               	retlw	76
   160  0633  3400               	retlw	0
   161                           
   162                           	psect	idataBANK1
   163  067B                     __pidataBANK1:	
   164                           
   165                           ;initializer for main@F1698
   166  067B  344C               	retlw	76
   167  067C  3434               	retlw	52
   168  067D  3420               	retlw	32
   169  067E  342D               	retlw	45
   170  067F  3420               	retlw	32
   171  0680  3443               	retlw	67
   172  0681  347A               	retlw	122
   173  0682  3465               	retlw	101
   174  0683  3473               	retlw	115
   175  0684  3463               	retlw	99
   176  0685  3420               	retlw	32
   177  0686  344B               	retlw	75
   178  0687  3475               	retlw	117
   179  0688  3462               	retlw	98
   180  0689  3461               	retlw	97
   181  068A  3421               	retlw	33
   182  068B  3400               	retlw	0
   183                           
   184                           ;initializer for main@F1696
   185  068C  344C               	retlw	76
   186  068D  3433               	retlw	51
   187  068E  3420               	retlw	32
   188  068F  342D               	retlw	45
   189  0690  3420               	retlw	32
   190  0691  3443               	retlw	67
   191  0692  347A               	retlw	122
   192  0693  3465               	retlw	101
   193  0694  3473               	retlw	115
   194  0695  3463               	retlw	99
   195  0696  3420               	retlw	32
   196  0697  344B               	retlw	75
   197  0698  3475               	retlw	117
   198  0699  3462               	retlw	98
   199  069A  3461               	retlw	97
   200  069B  3421               	retlw	33
   201  069C  3400               	retlw	0
   202  0009                     _PORTE	set	9
   203  0008                     _PORTD	set	8
   204  0006                     _PORTB	set	6
   205  0005                     _PORTA	set	5
   206  0089                     _TRISE	set	137
   207  0088                     _TRISD	set	136
   208  0087                     _TRISC	set	135
   209  0086                     _TRISB	set	134
   210  0085                     _TRISA	set	133
   211  008F                     _OSCCON	set	143
   212  0189                     _ANSELH	set	393
   213  0188                     _ANSEL	set	392
   214                           
   215                           ; #config settings
   216  0000                     
   217                           	psect	cinit
   218  07E3                     start_initialization:	
   219  07E3                     __initialization:	
   220                           
   221                           ; Initialize objects allocated to BANK1
   222  07E3  1383               	bcf	3,7	;select IRP bank0
   223  07E4  30C2               	movlw	low (__pdataBANK1+34)
   224  07E5  00FD               	movwf	btemp+-1
   225  07E6  3006               	movlw	high __pidataBANK1
   226  07E7  00FE               	movwf	btemp
   227  07E8  307B               	movlw	low __pidataBANK1
   228  07E9  00FF               	movwf	btemp+1
   229  07EA  30A0               	movlw	low __pdataBANK1
   230  07EB  0084               	movwf	4
   231  07EC  120A  118A  2614  120A  118A  	fcall	init_ram0
   232                           
   233                           ; Initialize objects allocated to BANK0
   234  07F1  306D               	movlw	low (__pdataBANK0+19)
   235  07F2  00FD               	movwf	btemp+-1
   236  07F3  3006               	movlw	high __pidataBANK0
   237  07F4  00FE               	movwf	btemp
   238  07F5  3021               	movlw	low __pidataBANK0
   239  07F6  00FF               	movwf	btemp+1
   240  07F7  305A               	movlw	low __pdataBANK0
   241  07F8  0084               	movwf	4
   242  07F9  120A  118A  2614   	fcall	init_ram0
   243  07FC                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  07FC                     __end_of__initialization:	
   247  07FC  0183               	clrf	3
   248  07FD  120A  118A  2F7B   	ljmp	_main	;jump to C main() function
   249                           
   250                           	psect	dataBANK0
   251  005A                     __pdataBANK0:	
   252  005A                     main@F1694:	
   253  005A                     	ds	17
   254  006B                     main@F1692:	
   255  006B                     	ds	2
   256                           
   257                           	psect	dataBANK1
   258  00A0                     __pdataBANK1:	
   259  00A0                     main@F1698:	
   260  00A0                     	ds	17
   261  00B1                     main@F1696:	
   262  00B1                     	ds	17
   263                           
   264                           	psect	inittext
   265  0610                     init_fetch0:	
   266                           ;	Called with low address in FSR and high address in W
   267                           
   268  0610  087E               	movf	126,w
   269  0611  008A               	movwf	10
   270  0612  087F               	movf	127,w
   271  0613  0082               	movwf	2
   272  0614                     init_ram0:	
   273                           ;Called with:
   274                           ;	high address of idata address in btemp 
   275                           ;	low address of idata address in btemp+1 
   276                           ;	low address of data in FSR
   277                           ;	high address + 1 of data in btemp-1
   278                           
   279  0614  2610  120A  118A   	fcall	init_fetch0
   280  0617  0080               	movwf	0
   281  0618  0A84               	incf	4,f
   282  0619  0804               	movf	4,w
   283  061A  067D               	xorwf	125,w
   284  061B  1903               	btfsc	3,2
   285  061C  3400               	retlw	0
   286  061D  0AFF               	incf	127,f
   287  061E  1903               	btfsc	3,2
   288  061F  0AFE               	incf	126,f
   289  0620  2E14               	goto	init_ram0
   290                           
   291                           	psect	cstackCOMMON
   292  0070                     __pcstackCOMMON:	
   293  0070                     ?_Init:	
   294  0070                     ??_Init:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_lcd_reset:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ??_lcd_reset:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_lcd_cmd:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ??_lcd_cmd:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_lcd_init:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_lcd_data:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ??_lcd_data:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_lcd_clear:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 1 bytes @ 0x0
   326  0070                     	ds	1
   327  0071                     lcd_cmd@cmd:	
   328  0071                     lcd_data@dat:	
   329                           ; 1 bytes @ 0x1
   330                           
   331                           
   332                           ; 1 bytes @ 0x1
   333  0071                     	ds	1
   334  0072                     ??_lcd_init:	
   335  0072                     ?_lcd_send_string:	
   336                           ; 1 bytes @ 0x2
   337                           
   338  0072                     ??_lcd_clear:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0072                     lcd_send_string@length:	
   342                           ; 1 bytes @ 0x2
   343                           
   344                           
   345                           ; 1 bytes @ 0x2
   346  0072                     	ds	1
   347  0073                     ??_lcd_send_string:	
   348                           
   349                           ; 1 bytes @ 0x3
   350  0073                     	ds	1
   351  0074                     lcd_send_string@str:	
   352                           
   353                           ; 1 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     ?_lcd_out:	
   356  0075                     lcd_out@column:	
   357                           ; 1 bytes @ 0x5
   358                           
   359                           
   360                           ; 1 bytes @ 0x5
   361  0075                     	ds	1
   362  0076                     lcd_out@str:	
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	1
   366  0077                     lcd_out@length:	
   367                           
   368                           ; 1 bytes @ 0x7
   369  0077                     	ds	1
   370  0078                     ??_lcd_out:	
   371                           
   372                           ; 1 bytes @ 0x8
   373  0078                     	ds	1
   374  0079                     lcd_out@result:	
   375                           
   376                           ; 1 bytes @ 0x9
   377  0079                     	ds	1
   378  007A                     lcd_out@position:	
   379                           
   380                           ; 1 bytes @ 0xA
   381  007A                     	ds	1
   382  007B                     lcd_out@row:	
   383                           
   384                           ; 1 bytes @ 0xB
   385  007B                     	ds	1
   386                           
   387                           	psect	cstackBANK0
   388  0020                     __pcstackBANK0:	
   389  0020                     ??_main:	
   390                           
   391                           ; 1 bytes @ 0x0
   392  0020                     	ds	4
   393  0024                     main@text1:	
   394                           
   395                           ; 17 bytes @ 0x4
   396  0024                     	ds	17
   397  0035                     main@text2:	
   398                           
   399                           ; 17 bytes @ 0x15
   400  0035                     	ds	17
   401  0046                     main@text3:	
   402                           
   403                           ; 17 bytes @ 0x26
   404  0046                     	ds	17
   405  0057                     main@i:	
   406                           
   407                           ; 1 bytes @ 0x37
   408  0057                     	ds	1
   409  0058                     main@text:	
   410                           
   411                           ; 2 bytes @ 0x38
   412  0058                     	ds	2
   413                           
   414                           	psect	maintext
   415  077B                     __pmaintext:	
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 131 in file "main_LCD.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  text3          17   38[BANK0 ] unsigned char [17]
   426 ;;  text2          17   21[BANK0 ] unsigned char [17]
   427 ;;  text1          17    4[BANK0 ] unsigned char [17]
   428 ;;  text            2   56[BANK0 ] unsigned char [2]
   429 ;;  i               1   55[BANK0 ] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : B00/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0      54       0       0       0
   441 ;;      Temps:          0       4       0       0       0
   442 ;;      Totals:         0      58       0       0       0
   443 ;;Total ram usage:       58 bytes
   444 ;; Hardware stack levels required when called:    3
   445 ;; This function calls:
   446 ;;		_Init
   447 ;;		_lcd_clear
   448 ;;		_lcd_init
   449 ;;		_lcd_out
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _main
   457  077B                     _main:	
   458                           
   459                           ;main_LCD.c: 132: char i = 0;
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   463  077B  1283               	bcf	3,5	;RP0=0, select bank0
   464  077C  1303               	bcf	3,6	;RP1=0, select bank0
   465  077D  01D7               	clrf	main@i
   466                           
   467                           ;main_LCD.c: 133: unsigned char text[] = "L";
   468  077E  086C               	movf	main@F1692+1,w
   469  077F  00D9               	movwf	main@text+1
   470  0780  086B               	movf	main@F1692,w
   471  0781  00D8               	movwf	main@text
   472                           
   473                           ;main_LCD.c: 134: unsigned char text1[] = "L2 - Czesc Kuba!";
   474  0782  3024               	movlw	main@text1& (0+255)
   475  0783  0084               	movwf	4
   476  0784  305A               	movlw	low main@F1694
   477  0785  00A0               	movwf	??_main
   478  0786  0804               	movf	4,w
   479  0787  00A1               	movwf	??_main+1
   480  0788  3011               	movlw	17
   481  0789  00A2               	movwf	??_main+2
   482  078A                     u360:	
   483  078A  0820               	movf	??_main,w
   484  078B  0084               	movwf	4
   485  078C  1383               	bcf	3,7	;select IRP bank0
   486  078D  0800               	movf	0,w
   487  078E  00A3               	movwf	??_main+3
   488  078F  0AA0               	incf	??_main,f
   489  0790  0821               	movf	??_main+1,w
   490  0791  0084               	movwf	4
   491  0792  0823               	movf	??_main+3,w
   492  0793  0080               	movwf	0
   493  0794  0AA1               	incf	??_main+1,f
   494  0795  0BA2               	decfsz	??_main+2,f
   495  0796  2F8A               	goto	u360
   496                           
   497                           ;main_LCD.c: 135: unsigned char text2[] = "L3 - Czesc Kuba!";
   498  0797  3035               	movlw	main@text2& (0+255)
   499  0798  0084               	movwf	4
   500  0799  30B1               	movlw	low main@F1696
   501  079A  00A0               	movwf	??_main
   502  079B  0804               	movf	4,w
   503  079C  00A1               	movwf	??_main+1
   504  079D  3011               	movlw	17
   505  079E  00A2               	movwf	??_main+2
   506  079F                     u370:	
   507  079F  0820               	movf	??_main,w
   508  07A0  0084               	movwf	4
   509  07A1  1383               	bcf	3,7	;select IRP bank1
   510  07A2  0800               	movf	0,w
   511  07A3  00A3               	movwf	??_main+3
   512  07A4  0AA0               	incf	??_main,f
   513  07A5  0821               	movf	??_main+1,w
   514  07A6  0084               	movwf	4
   515  07A7  0823               	movf	??_main+3,w
   516  07A8  0080               	movwf	0
   517  07A9  0AA1               	incf	??_main+1,f
   518  07AA  0BA2               	decfsz	??_main+2,f
   519  07AB  2F9F               	goto	u370
   520                           
   521                           ;main_LCD.c: 136: unsigned char text3[] = "L4 - Czesc Kuba!";
   522  07AC  3046               	movlw	main@text3& (0+255)
   523  07AD  0084               	movwf	4
   524  07AE  30A0               	movlw	low main@F1698
   525  07AF  00A0               	movwf	??_main
   526  07B0  0804               	movf	4,w
   527  07B1  00A1               	movwf	??_main+1
   528  07B2  3011               	movlw	17
   529  07B3  00A2               	movwf	??_main+2
   530  07B4                     u380:	
   531  07B4  0820               	movf	??_main,w
   532  07B5  0084               	movwf	4
   533  07B6  1383               	bcf	3,7	;select IRP bank1
   534  07B7  0800               	movf	0,w
   535  07B8  00A3               	movwf	??_main+3
   536  07B9  0AA0               	incf	??_main,f
   537  07BA  0821               	movf	??_main+1,w
   538  07BB  0084               	movwf	4
   539  07BC  0823               	movf	??_main+3,w
   540  07BD  0080               	movwf	0
   541  07BE  0AA1               	incf	??_main+1,f
   542  07BF  0BA2               	decfsz	??_main+2,f
   543  07C0  2FB4               	goto	u380
   544                           
   545                           ;main_LCD.c: 137: Init();
   546  07C1  120A  118A  2648  120A  118A  	fcall	_Init
   547                           
   548                           ;main_LCD.c: 138: lcd_init();
   549  07C6  120A  118A  265F  120A  118A  	fcall	_lcd_init
   550                           
   551                           ;main_LCD.c: 139: lcd_clear();
   552  07CB  120A  118A  2600  120A  118A  	fcall	_lcd_clear
   553                           
   554                           ;main_LCD.c: 140: lcd_out(2,10,text,1);
   555  07D0  300A               	movlw	10
   556  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   557  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   558  07D3  00A0               	movwf	??_main
   559  07D4  0820               	movf	??_main,w
   560  07D5  00F5               	movwf	lcd_out@column
   561  07D6  3058               	movlw	(low (main@text| 0))& (0+255)
   562  07D7  00A1               	movwf	??_main+1
   563  07D8  0821               	movf	??_main+1,w
   564  07D9  00F6               	movwf	lcd_out@str
   565  07DA  01F7               	clrf	lcd_out@length
   566  07DB  0AF7               	incf	lcd_out@length,f
   567  07DC  3002               	movlw	2
   568  07DD  120A  118A  26F3  120A  118A  	fcall	_lcd_out
   569  07E2                     l88:	
   570                           ;main_LCD.c: 170: while(1);
   571                           
   572  07E2  2FE2               	goto	l88
   573  07E3                     __end_of_main:	
   574                           ;main_LCD.c: 171: return;
   575                           
   576                           
   577                           	psect	text1
   578  06F3                     __ptext1:	
   579 ;; *************** function _lcd_out *****************
   580 ;; Defined at:
   581 ;;		line 108 in file "main_LCD.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  row             1    wreg     unsigned char 
   584 ;;  column          1    5[COMMON] unsigned char 
   585 ;;  str             1    6[COMMON] PTR unsigned char 
   586 ;;		 -> main@text(2), 
   587 ;;  length          1    7[COMMON] unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  row             1   11[COMMON] unsigned char 
   590 ;;  position        1   10[COMMON] unsigned char 
   591 ;;  result          1    9[COMMON] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         3       0       0       0       0
   602 ;;      Locals:         3       0       0       0       0
   603 ;;      Temps:          1       0       0       0       0
   604 ;;      Totals:         7       0       0       0       0
   605 ;;Total ram usage:        7 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    2
   608 ;; This function calls:
   609 ;;		_lcd_cmd
   610 ;;		_lcd_send_string
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _lcd_out
   618  06F3                     _lcd_out:	
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   622                           ;lcd_out@row stored from wreg
   623  06F3  00FB               	movwf	lcd_out@row
   624                           
   625                           ;main_LCD.c: 110: char result = 1, position = 0;
   626  06F4  01F9               	clrf	lcd_out@result
   627  06F5  0AF9               	incf	lcd_out@result,f
   628  06F6  01FA               	clrf	lcd_out@position
   629                           
   630                           ;main_LCD.c: 112: if(row >= 1 && row <= 4){
   631  06F7  087B               	movf	lcd_out@row,w
   632  06F8  1903               	btfsc	3,2
   633  06F9  2F28               	goto	l745
   634  06FA  3005               	movlw	5
   635  06FB  027B               	subwf	lcd_out@row,w
   636  06FC  1803               	skipnc
   637  06FD  2F28               	goto	l745
   638                           
   639                           ;main_LCD.c: 113: if(column >= 1 && column <=20){
   640  06FE  0875               	movf	lcd_out@column,w
   641  06FF  1903               	btfsc	3,2
   642  0700  2F28               	goto	l745
   643  0701  3015               	movlw	21
   644  0702  0275               	subwf	lcd_out@column,w
   645  0703  1803               	skipnc
   646  0704  2F28               	goto	l745
   647                           
   648                           ;main_LCD.c: 114: if(row == 1) position = column;
   649  0705  037B               	decf	lcd_out@row,w
   650  0706  1D03               	btfss	3,2
   651  0707  2F0A               	goto	l731
   652  0708  0875               	movf	lcd_out@column,w
   653  0709  2F1E               	goto	L3
   654  070A                     l731:	
   655                           
   656                           ;main_LCD.c: 115: else if (row == 2) position = 40 + column;
   657  070A  3002               	movlw	2
   658  070B  067B               	xorwf	lcd_out@row,w
   659  070C  1D03               	btfss	3,2
   660  070D  2F11               	goto	l735
   661  070E  0875               	movf	lcd_out@column,w
   662  070F  3E28               	addlw	40
   663  0710  2F1E               	goto	L3
   664  0711                     l735:	
   665                           
   666                           ;main_LCD.c: 116: else if (row == 3) position = 20 + column;
   667  0711  3003               	movlw	3
   668  0712  067B               	xorwf	lcd_out@row,w
   669  0713  1D03               	btfss	3,2
   670  0714  2F18               	goto	l739
   671  0715  0875               	movf	lcd_out@column,w
   672  0716  3E14               	addlw	20
   673  0717  2F1E               	goto	L3
   674  0718                     l739:	
   675                           
   676                           ;main_LCD.c: 117: else if (row == 4) position = 60 + column;
   677  0718  3004               	movlw	4
   678  0719  067B               	xorwf	lcd_out@row,w
   679  071A  1D03               	btfss	3,2
   680  071B  2F21               	goto	l743
   681  071C  0875               	movf	lcd_out@column,w
   682  071D  3E3C               	addlw	60
   683  071E                     L3:	
   684  071E  00F8               	movwf	??_lcd_out
   685  071F  0878               	movf	??_lcd_out,w
   686  0720  00FA               	movwf	lcd_out@position
   687  0721                     l743:	
   688                           
   689                           ;main_LCD.c: 118: lcd_cmd(position + 0x80 - 1);
   690  0721  087A               	movf	lcd_out@position,w
   691  0722  3E7F               	addlw	127
   692  0723  120A  118A  269D  120A  118A  	fcall	_lcd_cmd
   693  0728                     l745:	
   694                           
   695                           ;main_LCD.c: 119: }
   696                           ;main_LCD.c: 120: }
   697                           ;main_LCD.c: 121: lcd_send_string(str, length);
   698  0728  0877               	movf	lcd_out@length,w
   699  0729  00F8               	movwf	??_lcd_out
   700  072A  0878               	movf	??_lcd_out,w
   701  072B  00F2               	movwf	lcd_send_string@length
   702  072C  0876               	movf	lcd_out@str,w
   703  072D  120A  118A  2634   	fcall	_lcd_send_string
   704  0730  0008               	return
   705  0731                     __end_of_lcd_out:	
   706                           
   707                           	psect	text2
   708  0634                     __ptext2:	
   709 ;; *************** function _lcd_send_string *****************
   710 ;; Defined at:
   711 ;;		line 84 in file "main_LCD.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  str             1    wreg     PTR unsigned char 
   714 ;;		 -> main@text(2), 
   715 ;;  length          1    2[COMMON] unsigned char 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  str             1    4[COMMON] PTR unsigned char 
   718 ;;		 -> main@text(2), 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         1       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0
   730 ;;      Temps:          1       0       0       0       0
   731 ;;      Totals:         3       0       0       0       0
   732 ;;Total ram usage:        3 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		_lcd_data
   737 ;; This function is called by:
   738 ;;		_lcd_out
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _lcd_send_string
   744  0634                     _lcd_send_string:	
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   748                           ;lcd_send_string@str stored from wreg
   749  0634  00F4               	movwf	lcd_send_string@str
   750  0635                     l697:	
   751                           ;main_LCD.c: 86: while(length--) lcd_data(*str++);
   752                           
   753  0635  3001               	movlw	1
   754  0636  02F2               	subwf	lcd_send_string@length,f
   755  0637  0A72               	incf	lcd_send_string@length,w
   756  0638  1903               	btfsc	3,2
   757  0639  0008               	return
   758  063A  0874               	movf	lcd_send_string@str,w
   759  063B  0084               	movwf	4
   760  063C  1383               	bcf	3,7	;select IRP bank0
   761  063D  0800               	movf	0,w
   762  063E  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   763  0643  3001               	movlw	1
   764  0644  00F3               	movwf	??_lcd_send_string
   765  0645  0873               	movf	??_lcd_send_string,w
   766  0646  07F4               	addwf	lcd_send_string@str,f
   767  0647  2E35               	goto	l697
   768  0648                     __end_of_lcd_send_string:	
   769                           
   770                           	psect	text3
   771  06C7                     __ptext3:	
   772 ;; *************** function _lcd_data *****************
   773 ;; Defined at:
   774 ;;		line 73 in file "main_LCD.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  dat             1    wreg     unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  dat             1    1[COMMON] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0
   790 ;;      Temps:          1       0       0       0       0
   791 ;;      Totals:         2       0       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_lcd_send_string
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _lcd_data
   803  06C7                     _lcd_data:	
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   807                           ;lcd_data@dat stored from wreg
   808  06C7  00F1               	movwf	lcd_data@dat
   809                           
   810                           ;main_LCD.c: 75: PORTD = (unsigned)(((dat >> 4) & 0x0F) | 0x20 |0x10);
   811  06C8  0871               	movf	lcd_data@dat,w
   812  06C9  00F0               	movwf	??_lcd_data
   813  06CA  3004               	movlw	4
   814  06CB                     u205:	
   815  06CB  1003               	clrc
   816  06CC  0CF0               	rrf	??_lcd_data,f
   817  06CD  3EFF               	addlw	-1
   818  06CE  1D03               	skipz
   819  06CF  2ECB               	goto	u205
   820  06D0  0870               	movf	??_lcd_data,w
   821  06D1  390F               	andlw	15
   822  06D2  3830               	iorlw	48
   823  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   824  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   825  06D5  0088               	movwf	8	;volatile
   826                           
   827                           ;main_LCD.c: 76: PORTD = (unsigned)(((dat >> 4) & 0x0F) | 0x10);
   828  06D6  0871               	movf	lcd_data@dat,w
   829  06D7  00F0               	movwf	??_lcd_data
   830  06D8  3004               	movlw	4
   831  06D9                     u215:	
   832  06D9  1003               	clrc
   833  06DA  0CF0               	rrf	??_lcd_data,f
   834  06DB  3EFF               	addlw	-1
   835  06DC  1D03               	skipz
   836  06DD  2ED9               	goto	u215
   837  06DE  0870               	movf	??_lcd_data,w
   838  06DF  390F               	andlw	15
   839  06E0  3810               	iorlw	16
   840  06E1  0088               	movwf	8	;volatile
   841                           
   842                           ;main_LCD.c: 77: PORTD = (unsigned)((dat & 0x0F)|0x20|0x10);
   843  06E2  0871               	movf	lcd_data@dat,w
   844  06E3  390F               	andlw	15
   845  06E4  3830               	iorlw	48
   846  06E5  0088               	movwf	8	;volatile
   847                           
   848                           ;main_LCD.c: 78: PORTD = (unsigned)((dat & 0x0F)|0x10);
   849  06E6  0871               	movf	lcd_data@dat,w
   850  06E7  390F               	andlw	15
   851  06E8  3810               	iorlw	16
   852  06E9  0088               	movwf	8	;volatile
   853                           
   854                           ;main_LCD.c: 79: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   855  06EA  3085               	movlw	133
   856  06EB  00F0               	movwf	??_lcd_data
   857  06EC                     u397:	
   858  06EC  0BF0               	decfsz	??_lcd_data,f
   859  06ED  2EEC               	goto	u397
   860                           
   861                           ;main_LCD.c: 80: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   862  06EE  3085               	movlw	133
   863  06EF  00F0               	movwf	??_lcd_data
   864  06F0                     u407:	
   865  06F0  0BF0               	decfsz	??_lcd_data,f
   866  06F1  2EF0               	goto	u407
   867  06F2  0008               	return
   868  06F3                     __end_of_lcd_data:	
   869                           
   870                           	psect	text4
   871  065F                     __ptext4:	
   872 ;; *************** function _lcd_init *****************
   873 ;; Defined at:
   874 ;;		line 60 in file "main_LCD.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		_lcd_cmd
   897 ;;		_lcd_reset
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _lcd_init
   905  065F                     _lcd_init:	
   906                           
   907                           ;main_LCD.c: 62: lcd_reset();
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   911  065F  120A  118A  2731  120A  118A  	fcall	_lcd_reset
   912                           
   913                           ;main_LCD.c: 63: lcd_cmd(0x28);
   914  0664  3028               	movlw	40
   915  0665  120A  118A  269D  120A  118A  	fcall	_lcd_cmd
   916                           
   917                           ;main_LCD.c: 64: lcd_cmd(0x0C);
   918  066A  300C               	movlw	12
   919  066B  120A  118A  269D  120A  118A  	fcall	_lcd_cmd
   920                           
   921                           ;main_LCD.c: 65: lcd_cmd(0x06);
   922  0670  3006               	movlw	6
   923  0671  120A  118A  269D  120A  118A  	fcall	_lcd_cmd
   924                           
   925                           ;main_LCD.c: 66: lcd_cmd(0x80);
   926  0676  3080               	movlw	128
   927  0677  120A  118A  269D   	fcall	_lcd_cmd
   928  067A  0008               	return
   929  067B                     __end_of_lcd_init:	
   930                           
   931                           	psect	text5
   932  0731                     __ptext5:	
   933 ;; *************** function _lcd_reset *****************
   934 ;; Defined at:
   935 ;;		line 30 in file "main_LCD.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0
   951 ;;      Temps:          2       0       0       0       0
   952 ;;      Totals:         2       0       0       0       0
   953 ;;Total ram usage:        2 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_lcd_init
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _lcd_reset
   964  0731                     _lcd_reset:	
   965                           
   966                           ;main_LCD.c: 32: PORTD = 0xFF;
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _lcd_reset: [wreg]
   970  0731  30FF               	movlw	255
   971  0732  1283               	bcf	3,5	;RP0=0, select bank0
   972  0733  1303               	bcf	3,6	;RP1=0, select bank0
   973  0734  0088               	movwf	8	;volatile
   974                           
   975                           ;main_LCD.c: 33: _delay((unsigned long)((20)*(8000000UL/4000.0)));
   976  0735  3034               	movlw	52
   977  0736  00F1               	movwf	??_lcd_reset+1
   978  0737  30F1               	movlw	241
   979  0738  00F0               	movwf	??_lcd_reset
   980  0739                     u417:	
   981  0739  0BF0               	decfsz	??_lcd_reset,f
   982  073A  2F39               	goto	u417
   983  073B  0BF1               	decfsz	??_lcd_reset+1,f
   984  073C  2F39               	goto	u417
   985  073D  2F3E               	nop2
   986                           
   987                           ;main_LCD.c: 34: PORTD = 0x03 + 0x20;
   988  073E  3023               	movlw	35
   989  073F  1283               	bcf	3,5	;RP0=0, select bank0
   990  0740  1303               	bcf	3,6	;RP1=0, select bank0
   991  0741  0088               	movwf	8	;volatile
   992                           
   993                           ;main_LCD.c: 35: PORTD = 0x03;
   994  0742  3003               	movlw	3
   995  0743  0088               	movwf	8	;volatile
   996                           
   997                           ;main_LCD.c: 36: _delay((unsigned long)((10)*(8000000UL/4000.0)));
   998  0744  301A               	movlw	26
   999  0745  00F1               	movwf	??_lcd_reset+1
  1000  0746  30F8               	movlw	248
  1001  0747  00F0               	movwf	??_lcd_reset
  1002  0748                     u427:	
  1003  0748  0BF0               	decfsz	??_lcd_reset,f
  1004  0749  2F48               	goto	u427
  1005  074A  0BF1               	decfsz	??_lcd_reset+1,f
  1006  074B  2F48               	goto	u427
  1007  074C  0000               	nop
  1008                           
  1009                           ;main_LCD.c: 37: PORTD = 0x03 + 0x20;
  1010  074D  3023               	movlw	35
  1011  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1012  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0750  0088               	movwf	8	;volatile
  1014                           
  1015                           ;main_LCD.c: 38: PORTD = 0x03;
  1016  0751  3003               	movlw	3
  1017  0752  0088               	movwf	8	;volatile
  1018                           
  1019                           ;main_LCD.c: 39: _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1020  0753  3003               	movlw	3
  1021  0754  00F1               	movwf	??_lcd_reset+1
  1022  0755  3097               	movlw	151
  1023  0756  00F0               	movwf	??_lcd_reset
  1024  0757                     u437:	
  1025  0757  0BF0               	decfsz	??_lcd_reset,f
  1026  0758  2F57               	goto	u437
  1027  0759  0BF1               	decfsz	??_lcd_reset+1,f
  1028  075A  2F57               	goto	u437
  1029  075B  2F5C               	nop2
  1030                           
  1031                           ;main_LCD.c: 40: PORTD = 0x03 + 0x20;
  1032  075C  3023               	movlw	35
  1033  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1034  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1035  075F  0088               	movwf	8	;volatile
  1036                           
  1037                           ;main_LCD.c: 41: PORTD = 0x03;
  1038  0760  3003               	movlw	3
  1039  0761  0088               	movwf	8	;volatile
  1040                           
  1041                           ;main_LCD.c: 42: _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1042  0762  3003               	movlw	3
  1043  0763  00F1               	movwf	??_lcd_reset+1
  1044  0764  3097               	movlw	151
  1045  0765  00F0               	movwf	??_lcd_reset
  1046  0766                     u447:	
  1047  0766  0BF0               	decfsz	??_lcd_reset,f
  1048  0767  2F66               	goto	u447
  1049  0768  0BF1               	decfsz	??_lcd_reset+1,f
  1050  0769  2F66               	goto	u447
  1051  076A  2F6B               	nop2
  1052                           
  1053                           ;main_LCD.c: 43: PORTD = 0x02 + 0x20;
  1054  076B  3022               	movlw	34
  1055  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1056  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1057  076E  0088               	movwf	8	;volatile
  1058                           
  1059                           ;main_LCD.c: 44: PORTD = 0x02;
  1060  076F  3002               	movlw	2
  1061  0770  0088               	movwf	8	;volatile
  1062                           
  1063                           ;main_LCD.c: 45: _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1064  0771  3003               	movlw	3
  1065  0772  00F1               	movwf	??_lcd_reset+1
  1066  0773  3097               	movlw	151
  1067  0774  00F0               	movwf	??_lcd_reset
  1068  0775                     u457:	
  1069  0775  0BF0               	decfsz	??_lcd_reset,f
  1070  0776  2F75               	goto	u457
  1071  0777  0BF1               	decfsz	??_lcd_reset+1,f
  1072  0778  2F75               	goto	u457
  1073  0779  2F7A               	nop2
  1074  077A  0008               	return
  1075  077B                     __end_of_lcd_reset:	
  1076                           
  1077                           	psect	text6
  1078  0600                     __ptext6:	
  1079 ;; *************** function _lcd_clear *****************
  1080 ;; Defined at:
  1081 ;;		line 89 in file "main_LCD.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          2       0       0       0       0
  1098 ;;      Totals:         2       0       0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    1
  1102 ;; This function calls:
  1103 ;;		_lcd_cmd
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _lcd_clear
  1111  0600                     _lcd_clear:	
  1112                           
  1113                           ;main_LCD.c: 91: lcd_cmd(0x01);
  1114                           
  1115                           ;incstack = 0
  1116                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1117  0600  3001               	movlw	1
  1118  0601  120A  118A  269D  120A  118A  	fcall	_lcd_cmd
  1119                           
  1120                           ;main_LCD.c: 92: _delay((unsigned long)((1200)*(8000000UL/4000000.0)));
  1121  0606  3004               	movlw	4
  1122  0607  00F3               	movwf	??_lcd_clear+1
  1123  0608  301C               	movlw	28
  1124  0609  00F2               	movwf	??_lcd_clear
  1125  060A                     u467:	
  1126  060A  0BF2               	decfsz	??_lcd_clear,f
  1127  060B  2E0A               	goto	u467
  1128  060C  0BF3               	decfsz	??_lcd_clear+1,f
  1129  060D  2E0A               	goto	u467
  1130  060E  0000               	nop
  1131  060F  0008               	return
  1132  0610                     __end_of_lcd_clear:	
  1133                           
  1134                           	psect	text7
  1135  069D                     __ptext7:	
  1136 ;; *************** function _lcd_cmd *****************
  1137 ;; Defined at:
  1138 ;;		line 48 in file "main_LCD.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  cmd             1    wreg     unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  cmd             1    1[COMMON] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0
  1155 ;;      Totals:         2       0       0       0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_lcd_init
  1162 ;;		_lcd_clear
  1163 ;;		_lcd_out
  1164 ;;		_lcd_return_home
  1165 ;;		_lcd_cursor_position
  1166 ;;		_lcd_entry_mode_set
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _lcd_cmd
  1172  069D                     _lcd_cmd:	
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1176                           ;lcd_cmd@cmd stored from wreg
  1177  069D  00F1               	movwf	lcd_cmd@cmd
  1178                           
  1179                           ;main_LCD.c: 50: PORTD = (unsigned)((cmd >> 4) & 0x0F) | 0x20;
  1180  069E  0871               	movf	lcd_cmd@cmd,w
  1181  069F  00F0               	movwf	??_lcd_cmd
  1182  06A0  3004               	movlw	4
  1183  06A1                     u225:	
  1184  06A1  1003               	clrc
  1185  06A2  0CF0               	rrf	??_lcd_cmd,f
  1186  06A3  3EFF               	addlw	-1
  1187  06A4  1D03               	skipz
  1188  06A5  2EA1               	goto	u225
  1189  06A6  0870               	movf	??_lcd_cmd,w
  1190  06A7  390F               	andlw	15
  1191  06A8  3820               	iorlw	32
  1192  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1193  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1194  06AB  0088               	movwf	8	;volatile
  1195                           
  1196                           ;main_LCD.c: 51: PORTD = (unsigned)((cmd >> 4) & 0x0F);
  1197  06AC  0871               	movf	lcd_cmd@cmd,w
  1198  06AD  00F0               	movwf	??_lcd_cmd
  1199  06AE  3004               	movlw	4
  1200  06AF                     u235:	
  1201  06AF  1003               	clrc
  1202  06B0  0CF0               	rrf	??_lcd_cmd,f
  1203  06B1  3EFF               	addlw	-1
  1204  06B2  1D03               	skipz
  1205  06B3  2EAF               	goto	u235
  1206  06B4  0870               	movf	??_lcd_cmd,w
  1207  06B5  390F               	andlw	15
  1208  06B6  0088               	movwf	8	;volatile
  1209                           
  1210                           ;main_LCD.c: 52: PORTD = (unsigned)(cmd & 0x0F) | 0x20;
  1211  06B7  0871               	movf	lcd_cmd@cmd,w
  1212  06B8  390F               	andlw	15
  1213  06B9  3820               	iorlw	32
  1214  06BA  0088               	movwf	8	;volatile
  1215                           
  1216                           ;main_LCD.c: 53: PORTD = (unsigned)(cmd & 0x0F);
  1217  06BB  0871               	movf	lcd_cmd@cmd,w
  1218  06BC  390F               	andlw	15
  1219  06BD  0088               	movwf	8	;volatile
  1220                           
  1221                           ;main_LCD.c: 54: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
  1222  06BE  3085               	movlw	133
  1223  06BF  00F0               	movwf	??_lcd_cmd
  1224  06C0                     u477:	
  1225  06C0  0BF0               	decfsz	??_lcd_cmd,f
  1226  06C1  2EC0               	goto	u477
  1227                           
  1228                           ;main_LCD.c: 55: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
  1229  06C2  3085               	movlw	133
  1230  06C3  00F0               	movwf	??_lcd_cmd
  1231  06C4                     u487:	
  1232  06C4  0BF0               	decfsz	??_lcd_cmd,f
  1233  06C5  2EC4               	goto	u487
  1234  06C6  0008               	return
  1235  06C7                     __end_of_lcd_cmd:	
  1236                           
  1237                           	psect	text8
  1238  0648                     __ptext8:	
  1239 ;; *************** function _Init *****************
  1240 ;; Defined at:
  1241 ;;		line 18 in file "main_LCD.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1255 ;;      Params:         0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function _Init
  1270  0648                     _Init:	
  1271                           
  1272                           ;main_LCD.c: 19: OSCCON = 0x71;
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _Init: [wreg+status,2]
  1276  0648  3071               	movlw	113
  1277  0649  1683               	bsf	3,5	;RP0=1, select bank1
  1278  064A  1303               	bcf	3,6	;RP1=0, select bank1
  1279  064B  008F               	movwf	15	;volatile
  1280                           
  1281                           ;main_LCD.c: 20: ANSEL = 0x00;
  1282  064C  1683               	bsf	3,5	;RP0=1, select bank3
  1283  064D  1703               	bsf	3,6	;RP1=1, select bank3
  1284  064E  0188               	clrf	8	;volatile
  1285                           
  1286                           ;main_LCD.c: 21: ANSELH = 0x00;
  1287  064F  0189               	clrf	9	;volatile
  1288                           
  1289                           ;main_LCD.c: 22: PORTA = PORTB = PORTD = PORTD = PORTE = 0x00;
  1290  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0652  0189               	clrf	9	;volatile
  1293  0653  0188               	clrf	8	;volatile
  1294  0654  0188               	clrf	8	;volatile
  1295  0655  0186               	clrf	6	;volatile
  1296  0656  0185               	clrf	5	;volatile
  1297                           
  1298                           ;main_LCD.c: 23: TRISA = TRISB = TRISC = TRISD = TRISE = 0x00;
  1299  0657  1683               	bsf	3,5	;RP0=1, select bank1
  1300  0658  1303               	bcf	3,6	;RP1=0, select bank1
  1301  0659  0189               	clrf	9	;volatile
  1302  065A  0188               	clrf	8	;volatile
  1303  065B  0187               	clrf	7	;volatile
  1304  065C  0186               	clrf	6	;volatile
  1305  065D  0185               	clrf	5	;volatile
  1306  065E  0008               	return
  1307  065F                     __end_of_Init:	
  1308  007E                     btemp	set	126	;btemp
  1309  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        53
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     58      77
    BANK1            80      0      34
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_out@str	PTR unsigned char  size(1) Largest target is 2
		 -> main@text(BANK0[2]), 

    lcd_send_string@str	PTR unsigned char  size(1) Largest target is 2
		 -> main@text(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_lcd_out
    _lcd_out->_lcd_send_string
    _lcd_send_string->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_init->_lcd_reset
    _lcd_clear->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0    1000
                                              0 BANK0     58    58      0
                               _Init
                          _lcd_clear
                           _lcd_init
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              7     4      3     796
                                              5 COMMON     7     4      3
                            _lcd_cmd
                    _lcd_send_string
 ---------------------------------------------------------------------------------
 (2) _lcd_send_string                                      3     2      1     213
                                              2 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      88
                            _lcd_cmd
                          _lcd_reset
 ---------------------------------------------------------------------------------
 (2) _lcd_reset                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0      88
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _lcd_clear
     _lcd_cmd
   _lcd_init
     _lcd_cmd
     _lcd_reset
   _lcd_out
     _lcd_cmd
     _lcd_send_string
       _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      22       7       42.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3A      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7B      12        0.0%
ABS                  0      0      7B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Oct 11 22:37:06 2017

             lcd_data@dat 0071                         pc 0002               __CFG_CP$OFF 0000  
                      l88 07E2                        fsr 0004               __CFG_LVP$ON 0000  
                     l731 070A                       l735 0711                       l743 0721  
                     l745 0728                       l739 0718                       l697 0635  
                     u205 06CB                       u215 06D9                       u225 06A1  
                     u235 06AF                       u407 06F0                       u360 078A  
                     u417 0739                       u370 079F              __CFG_CPD$OFF 0000  
                     u427 0748                       u380 07B4                       u437 0757  
                     u447 0766                       u457 0775                       u467 060A  
                     u477 06C0                       u397 06EC                       u487 06C4  
                     fsr0 0004                       indf 0000                      _Init 0648  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 077B  
   lcd_send_string@length 0072                      btemp 007E          ?_lcd_send_string 0072  
                    start 0000             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
                   ?_Init 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089             __CFG_PWRTE$ON 0000           __end_of_lcd_cmd 06C7  
         __end_of_lcd_out 0731                     main@i 0057            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 07E3              __end_of_Init 065F              __end_of_main 07E3  
                  ??_Init 0070                    ??_main 0020                    _ANSELH 0189  
           lcd_out@column 0075             lcd_out@length 0077                    _OSCCON 008F  
           lcd_out@result 0079          __end_of_lcd_data 06F3          __end_of_lcd_init 067B  
               ??_lcd_cmd 0070                 ??_lcd_out 0078   __end_of__initialization 07FC  
          __pcstackCOMMON 0070              __pidataBANK0 0621              __pidataBANK1 067B  
      __size_of_lcd_clear 0010        __size_of_lcd_reset 004A                __pmaintext 077B  
               ?_lcd_data 0070                 ?_lcd_init 0070         __end_of_lcd_clear 0610  
       __end_of_lcd_reset 077B  __size_of_lcd_send_string 0014                   __ptext1 06F3  
                 __ptext2 0634                   __ptext3 06C7                   __ptext4 065F  
                 __ptext5 0731                   __ptext6 0600                   __ptext7 069D  
                 __ptext8 0648                   _lcd_cmd 069D                   _lcd_out 06F3  
              ??_lcd_data 0070                ??_lcd_init 0072      end_of_initialization 07FC  
              lcd_cmd@cmd 0071        lcd_send_string@str 0074                lcd_out@row 007B  
              lcd_out@str 0076         ??_lcd_send_string 0073       start_initialization 07E3  
__CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 0610               __pdataBANK0 005A  
             __pdataBANK1 00A0                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of_lcd_data 002C         __size_of_lcd_init 001C                 _lcd_clear 0600  
               _lcd_reset 0731                  ?_lcd_cmd 0070                  ?_lcd_out 0075  
               main@F1692 006B                 main@F1694 005A                 main@F1696 00B1  
               main@F1698 00A0                ?_lcd_clear 0070                ?_lcd_reset 0070  
         lcd_out@position 007A                 main@text1 0024                 main@text2 0035  
               main@text3 0046           _lcd_send_string 0634          __size_of_lcd_cmd 002A  
        __size_of_lcd_out 003E         __CFG_BOR4V$BOR40V 0000                  _lcd_data 06C7  
                _lcd_init 065F             __size_of_Init 0017             __size_of_main 0068  
             ??_lcd_clear 0072                  main@text 0058               ??_lcd_reset 0070  
                init_ram0 0614   __end_of_lcd_send_string 0648  
