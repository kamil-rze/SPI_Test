

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Oct 04 22:32:58 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.42
    20                           ; Generated 13/04/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131                           
   132                           	psect	idataBANK1
   133  0769                     __pidataBANK1:	
   134                           
   135                           ;initializer for main@F1680
   136  0769  3430               	retlw	48
   137  076A  3431               	retlw	49
   138  076B  3432               	retlw	50
   139  076C  3433               	retlw	51
   140  076D  3434               	retlw	52
   141  076E  3435               	retlw	53
   142  076F  3436               	retlw	54
   143  0770  3437               	retlw	55
   144  0771  3438               	retlw	56
   145  0772  3439               	retlw	57
   146  0773  3441               	retlw	65
   147  0774  3442               	retlw	66
   148  0775  3443               	retlw	67
   149  0776  3444               	retlw	68
   150  0777  3445               	retlw	69
   151  0778  3446               	retlw	70
   152  0779  3447               	retlw	71
   153  077A  3448               	retlw	72
   154  077B  3449               	retlw	73
   155  077C  344A               	retlw	74
   156  077D  346F               	retlw	111
   157  077E  3431               	retlw	49
   158  077F  3432               	retlw	50
   159  0780  3433               	retlw	51
   160  0781  3434               	retlw	52
   161  0782  3435               	retlw	53
   162  0783  3436               	retlw	54
   163  0784  3437               	retlw	55
   164  0785  3438               	retlw	56
   165  0786  3439               	retlw	57
   166  0787  3461               	retlw	97
   167  0788  3462               	retlw	98
   168  0789  3463               	retlw	99
   169  078A  3464               	retlw	100
   170  078B  3465               	retlw	101
   171  078C  3466               	retlw	102
   172  078D  3467               	retlw	103
   173  078E  3468               	retlw	104
   174  078F  3469               	retlw	105
   175  0790  346A               	retlw	106
   176  0791  342C               	retlw	44
   177  0792  3431               	retlw	49
   178  0793  3432               	retlw	50
   179  0794  3433               	retlw	51
   180  0795  3434               	retlw	52
   181  0796  3435               	retlw	53
   182  0797  3436               	retlw	54
   183  0798  3437               	retlw	55
   184  0799  3438               	retlw	56
   185  079A  3439               	retlw	57
   186  079B  3471               	retlw	113
   187  079C  3477               	retlw	119
   188  079D  3465               	retlw	101
   189  079E  3472               	retlw	114
   190  079F  3474               	retlw	116
   191  07A0  3479               	retlw	121
   192  07A1  3467               	retlw	103
   193  07A2  3468               	retlw	104
   194  07A3  3469               	retlw	105
   195  07A4  346A               	retlw	106
   196  07A5  3400               	retlw	0
   197  0009                     _PORTE	set	9
   198  0008                     _PORTD	set	8
   199  0006                     _PORTB	set	6
   200  0005                     _PORTA	set	5
   201  0089                     _TRISE	set	137
   202  0088                     _TRISD	set	136
   203  0087                     _TRISC	set	135
   204  0086                     _TRISB	set	134
   205  0085                     _TRISA	set	133
   206  008F                     _OSCCON	set	143
   207  0189                     _ANSELH	set	393
   208  0188                     _ANSEL	set	392
   209                           
   210                           ; #config settings
   211  0000                     
   212                           	psect	cinit
   213  07F0                     start_initialization:	
   214  07F0                     __initialization:	
   215                           
   216                           ; Initialize objects allocated to BANK1
   217  07F0  1383               	bcf	3,7	;select IRP bank0
   218  07F1  30DD               	movlw	low (__pdataBANK1+61)
   219  07F2  00FD               	movwf	btemp+-1
   220  07F3  3007               	movlw	high __pidataBANK1
   221  07F4  00FE               	movwf	btemp
   222  07F5  3069               	movlw	low __pidataBANK1
   223  07F6  00FF               	movwf	btemp+1
   224  07F7  30A0               	movlw	low __pdataBANK1
   225  07F8  0084               	movwf	4
   226  07F9  120A  118A  2688   	fcall	init_ram0
   227  07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FC                     __end_of__initialization:	
   231  07FC  0183               	clrf	3
   232  07FD  120A  118A  2F32   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	dataBANK1
   235  00A0                     __pdataBANK1:	
   236  00A0                     main@F1680:	
   237  00A0                     	ds	61
   238                           
   239                           	psect	inittext
   240  0684                     init_fetch0:	
   241                           ;	Called with low address in FSR and high address in W
   242                           
   243  0684  087E               	movf	126,w
   244  0685  008A               	movwf	10
   245  0686  087F               	movf	127,w
   246  0687  0082               	movwf	2
   247  0688                     init_ram0:	
   248                           ;Called with:
   249                           ;	high address of idata address in btemp 
   250                           ;	low address of idata address in btemp+1 
   251                           ;	low address of data in FSR
   252                           ;	high address + 1 of data in btemp-1
   253                           
   254  0688  2684  120A  118A   	fcall	init_fetch0
   255  068B  0080               	movwf	0
   256  068C  0A84               	incf	4,f
   257  068D  0804               	movf	4,w
   258  068E  067D               	xorwf	125,w
   259  068F  1903               	btfsc	3,2
   260  0690  3400               	retlw	0
   261  0691  0AFF               	incf	127,f
   262  0692  1903               	btfsc	3,2
   263  0693  0AFE               	incf	126,f
   264  0694  2E88               	goto	init_ram0
   265                           
   266                           	psect	cstackCOMMON
   267  0070                     __pcstackCOMMON:	
   268  0070                     ?_Init:	
   269  0070                     ??_Init:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_lcd_reset:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ??_lcd_reset:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_lcd_cmd:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_lcd_cmd:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_lcd_init:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_lcd_data:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_lcd_data:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0070                     	ds	1
   299  0071                     lcd_cmd@cmd:	
   300  0071                     lcd_data@dat:	
   301                           ; 1 bytes @ 0x1
   302                           
   303                           
   304                           ; 1 bytes @ 0x1
   305  0071                     	ds	1
   306  0072                     ??_lcd_init:	
   307  0072                     ?_lcd_send_string:	
   308                           ; 1 bytes @ 0x2
   309                           
   310  0072                     lcd_send_string@length:	
   311                           ; 1 bytes @ 0x2
   312                           
   313                           
   314                           ; 1 bytes @ 0x2
   315  0072                     	ds	1
   316  0073                     ??_lcd_send_string:	
   317                           
   318                           ; 1 bytes @ 0x3
   319  0073                     	ds	1
   320  0074                     lcd_send_string@str:	
   321                           
   322                           ; 1 bytes @ 0x4
   323  0074                     	ds	1
   324  0075                     ??_main:	
   325                           
   326                           ; 1 bytes @ 0x5
   327  0075                     	ds	4
   328                           
   329                           	psect	cstackBANK0
   330  0020                     __pcstackBANK0:	
   331  0020                     main@text:	
   332                           
   333                           ; 61 bytes @ 0x0
   334  0020                     	ds	61
   335                           
   336                           	psect	maintext
   337  0732                     __pmaintext:	
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 106 in file "main_LCD.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  text           61    0[BANK0 ] unsigned char [61]
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : B00/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   357 ;;      Params:         0       0       0       0       0
   358 ;;      Locals:         0      61       0       0       0
   359 ;;      Temps:          4       0       0       0       0
   360 ;;      Totals:         4      61       0       0       0
   361 ;;Total ram usage:       65 bytes
   362 ;; Hardware stack levels required when called:    2
   363 ;; This function calls:
   364 ;;		_Init
   365 ;;		_lcd_init
   366 ;;		_lcd_send_string
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           
   373                           ;psect for function _main
   374  0732                     _main:	
   375                           
   376                           ;main_LCD.c: 107: unsigned char text[] = "0123456789ABCDEFGHIJo123456789abcdefghij,12345
      +                          6789qwertyghij";
   377                           
   378                           ;incstack = 0
   379                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   380  0732  3020               	movlw	main@text& (0+255)
   381  0733  0084               	movwf	4
   382  0734  30A0               	movlw	low main@F1680
   383  0735  00F5               	movwf	??_main
   384  0736  0804               	movf	4,w
   385  0737  00F6               	movwf	??_main+1
   386  0738  303D               	movlw	61
   387  0739  00F7               	movwf	??_main+2
   388  073A                     u160:	
   389  073A  0875               	movf	??_main,w
   390  073B  0084               	movwf	4
   391  073C  1383               	bcf	3,7	;select IRP bank1
   392  073D  0800               	movf	0,w
   393  073E  00F8               	movwf	??_main+3
   394  073F  0AF5               	incf	??_main,f
   395  0740  0876               	movf	??_main+1,w
   396  0741  0084               	movwf	4
   397  0742  0878               	movf	??_main+3,w
   398  0743  0080               	movwf	0
   399  0744  0AF6               	incf	??_main+1,f
   400  0745  0BF7               	decfsz	??_main+2,f
   401  0746  2F3A               	goto	u160
   402                           
   403                           ;main_LCD.c: 108: Init();
   404  0747  120A  118A  26A9  120A  118A  	fcall	_Init
   405                           
   406                           ;main_LCD.c: 109: lcd_init();
   407  074C  120A  118A  26C0  120A  118A  	fcall	_lcd_init
   408                           
   409                           ;main_LCD.c: 110: lcd_send_string(text,60);
   410  0751  303C               	movlw	60
   411  0752  00F5               	movwf	??_main
   412  0753  0875               	movf	??_main,w
   413  0754  00F2               	movwf	lcd_send_string@length
   414  0755  3020               	movlw	(low (main@text| 0))& (0+255)
   415  0756  120A  118A  2695  120A  118A  	fcall	_lcd_send_string
   416                           
   417                           ;main_LCD.c: 111: _delay((unsigned long)((1500)*(8000000UL/4000.0)));
   418  075B  3010               	movlw	16
   419  075C  00F7               	movwf	??_main+2
   420  075D  3039               	movlw	57
   421  075E  00F6               	movwf	??_main+1
   422  075F  300D               	movlw	13
   423  0760  00F5               	movwf	??_main
   424  0761                     u177:	
   425  0761  0BF5               	decfsz	??_main,f
   426  0762  2F61               	goto	u177
   427  0763  0BF6               	decfsz	??_main+1,f
   428  0764  2F61               	goto	u177
   429  0765  0BF7               	decfsz	??_main+2,f
   430  0766  2F61               	goto	u177
   431  0767  2F68               	nop2
   432  0768                     l65:	
   433                           ;main_LCD.c: 118: while(1);
   434                           
   435  0768  2F68               	goto	l65
   436  0769                     __end_of_main:	
   437                           ;main_LCD.c: 119: return;
   438                           
   439                           
   440                           	psect	text1
   441  0695                     __ptext1:	
   442 ;; *************** function _lcd_send_string *****************
   443 ;; Defined at:
   444 ;;		line 84 in file "main_LCD.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  str             1    wreg     PTR unsigned char 
   447 ;;		 -> main@text(61), 
   448 ;;  length          1    2[COMMON] unsigned char 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  str             1    4[COMMON] PTR unsigned char 
   451 ;;		 -> main@text(61), 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         1       0       0       0       0
   462 ;;      Locals:         1       0       0       0       0
   463 ;;      Temps:          1       0       0       0       0
   464 ;;      Totals:         3       0       0       0       0
   465 ;;Total ram usage:        3 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    1
   468 ;; This function calls:
   469 ;;		_lcd_data
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _lcd_send_string
   477  0695                     _lcd_send_string:	
   478                           
   479                           ;incstack = 0
   480                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   481                           ;lcd_send_string@str stored from wreg
   482  0695  00F4               	movwf	lcd_send_string@str
   483  0696                     l634:	
   484                           ;main_LCD.c: 86: while(length--) lcd_data(*str++);
   485                           
   486  0696  3001               	movlw	1
   487  0697  02F2               	subwf	lcd_send_string@length,f
   488  0698  0A72               	incf	lcd_send_string@length,w
   489  0699  1903               	btfsc	3,2
   490  069A  0008               	return
   491  069B  0874               	movf	lcd_send_string@str,w
   492  069C  0084               	movwf	4
   493  069D  1383               	bcf	3,7	;select IRP bank0
   494  069E  0800               	movf	0,w
   495  069F  120A  118A  2706  120A  118A  	fcall	_lcd_data
   496  06A4  3001               	movlw	1
   497  06A5  00F3               	movwf	??_lcd_send_string
   498  06A6  0873               	movf	??_lcd_send_string,w
   499  06A7  07F4               	addwf	lcd_send_string@str,f
   500  06A8  2E96               	goto	l634
   501  06A9                     __end_of_lcd_send_string:	
   502                           
   503                           	psect	text2
   504  0706                     __ptext2:	
   505 ;; *************** function _lcd_data *****************
   506 ;; Defined at:
   507 ;;		line 73 in file "main_LCD.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  dat             1    wreg     unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  dat             1    1[COMMON] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0
   523 ;;      Temps:          1       0       0       0       0
   524 ;;      Totals:         2       0       0       0       0
   525 ;;Total ram usage:        2 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_lcd_send_string
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _lcd_data
   536  0706                     _lcd_data:	
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   540                           ;lcd_data@dat stored from wreg
   541  0706  00F1               	movwf	lcd_data@dat
   542                           
   543                           ;main_LCD.c: 75: PORTD = (unsigned)(((dat >> 4) & 0x0F) | 0x20 |0x10);
   544  0707  0871               	movf	lcd_data@dat,w
   545  0708  00F0               	movwf	??_lcd_data
   546  0709  3004               	movlw	4
   547  070A                     u115:	
   548  070A  1003               	clrc
   549  070B  0CF0               	rrf	??_lcd_data,f
   550  070C  3EFF               	addlw	-1
   551  070D  1D03               	skipz
   552  070E  2F0A               	goto	u115
   553  070F  0870               	movf	??_lcd_data,w
   554  0710  390F               	andlw	15
   555  0711  3830               	iorlw	48
   556  0712  1283               	bcf	3,5	;RP0=0, select bank0
   557  0713  1303               	bcf	3,6	;RP1=0, select bank0
   558  0714  0088               	movwf	8	;volatile
   559                           
   560                           ;main_LCD.c: 76: PORTD = (unsigned)(((dat >> 4) & 0x0F) | 0x10);
   561  0715  0871               	movf	lcd_data@dat,w
   562  0716  00F0               	movwf	??_lcd_data
   563  0717  3004               	movlw	4
   564  0718                     u125:	
   565  0718  1003               	clrc
   566  0719  0CF0               	rrf	??_lcd_data,f
   567  071A  3EFF               	addlw	-1
   568  071B  1D03               	skipz
   569  071C  2F18               	goto	u125
   570  071D  0870               	movf	??_lcd_data,w
   571  071E  390F               	andlw	15
   572  071F  3810               	iorlw	16
   573  0720  0088               	movwf	8	;volatile
   574                           
   575                           ;main_LCD.c: 77: PORTD = (unsigned)((dat & 0x0F)|0x20|0x10);
   576  0721  0871               	movf	lcd_data@dat,w
   577  0722  390F               	andlw	15
   578  0723  3830               	iorlw	48
   579  0724  0088               	movwf	8	;volatile
   580                           
   581                           ;main_LCD.c: 78: PORTD = (unsigned)((dat & 0x0F)|0x10);
   582  0725  0871               	movf	lcd_data@dat,w
   583  0726  390F               	andlw	15
   584  0727  3810               	iorlw	16
   585  0728  0088               	movwf	8	;volatile
   586                           
   587                           ;main_LCD.c: 79: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   588  0729  3085               	movlw	133
   589  072A  00F0               	movwf	??_lcd_data
   590  072B                     u187:	
   591  072B  0BF0               	decfsz	??_lcd_data,f
   592  072C  2F2B               	goto	u187
   593                           
   594                           ;main_LCD.c: 80: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   595  072D  3085               	movlw	133
   596  072E  00F0               	movwf	??_lcd_data
   597  072F                     u197:	
   598  072F  0BF0               	decfsz	??_lcd_data,f
   599  0730  2F2F               	goto	u197
   600  0731  0008               	return
   601  0732                     __end_of_lcd_data:	
   602                           
   603                           	psect	text3
   604  06C0                     __ptext3:	
   605 ;; *************** function _lcd_init *****************
   606 ;; Defined at:
   607 ;;		line 60 in file "main_LCD.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; Hardware stack levels required when called:    1
   628 ;; This function calls:
   629 ;;		_lcd_cmd
   630 ;;		_lcd_reset
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _lcd_init
   638  06C0                     _lcd_init:	
   639                           
   640                           ;main_LCD.c: 62: lcd_reset();
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   644  06C0  120A  118A  27A6  120A  118A  	fcall	_lcd_reset
   645                           
   646                           ;main_LCD.c: 63: lcd_cmd(0x28);
   647  06C5  3028               	movlw	40
   648  06C6  120A  118A  26DC  120A  118A  	fcall	_lcd_cmd
   649                           
   650                           ;main_LCD.c: 64: lcd_cmd(0x0C);
   651  06CB  300C               	movlw	12
   652  06CC  120A  118A  26DC  120A  118A  	fcall	_lcd_cmd
   653                           
   654                           ;main_LCD.c: 65: lcd_cmd(0x06);
   655  06D1  3006               	movlw	6
   656  06D2  120A  118A  26DC  120A  118A  	fcall	_lcd_cmd
   657                           
   658                           ;main_LCD.c: 66: lcd_cmd(0x80);
   659  06D7  3080               	movlw	128
   660  06D8  120A  118A  26DC   	fcall	_lcd_cmd
   661  06DB  0008               	return
   662  06DC                     __end_of_lcd_init:	
   663                           
   664                           	psect	text4
   665  07A6                     __ptext4:	
   666 ;; *************** function _lcd_reset *****************
   667 ;; Defined at:
   668 ;;		line 30 in file "main_LCD.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          2       0       0       0       0
   685 ;;      Totals:         2       0       0       0       0
   686 ;;Total ram usage:        2 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_lcd_init
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _lcd_reset
   697  07A6                     _lcd_reset:	
   698                           
   699                           ;main_LCD.c: 32: PORTD = 0xFF;
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _lcd_reset: [wreg]
   703  07A6  30FF               	movlw	255
   704  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   705  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   706  07A9  0088               	movwf	8	;volatile
   707                           
   708                           ;main_LCD.c: 33: _delay((unsigned long)((20)*(8000000UL/4000.0)));
   709  07AA  3034               	movlw	52
   710  07AB  00F1               	movwf	??_lcd_reset+1
   711  07AC  30F1               	movlw	241
   712  07AD  00F0               	movwf	??_lcd_reset
   713  07AE                     u207:	
   714  07AE  0BF0               	decfsz	??_lcd_reset,f
   715  07AF  2FAE               	goto	u207
   716  07B0  0BF1               	decfsz	??_lcd_reset+1,f
   717  07B1  2FAE               	goto	u207
   718  07B2  2FB3               	nop2
   719                           
   720                           ;main_LCD.c: 34: PORTD = 0x03 + 0x20;
   721  07B3  3023               	movlw	35
   722  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   723  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   724  07B6  0088               	movwf	8	;volatile
   725                           
   726                           ;main_LCD.c: 35: PORTD = 0x03;
   727  07B7  3003               	movlw	3
   728  07B8  0088               	movwf	8	;volatile
   729                           
   730                           ;main_LCD.c: 36: _delay((unsigned long)((10)*(8000000UL/4000.0)));
   731  07B9  301A               	movlw	26
   732  07BA  00F1               	movwf	??_lcd_reset+1
   733  07BB  30F8               	movlw	248
   734  07BC  00F0               	movwf	??_lcd_reset
   735  07BD                     u217:	
   736  07BD  0BF0               	decfsz	??_lcd_reset,f
   737  07BE  2FBD               	goto	u217
   738  07BF  0BF1               	decfsz	??_lcd_reset+1,f
   739  07C0  2FBD               	goto	u217
   740  07C1  0000               	nop
   741                           
   742                           ;main_LCD.c: 37: PORTD = 0x03 + 0x20;
   743  07C2  3023               	movlw	35
   744  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   745  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   746  07C5  0088               	movwf	8	;volatile
   747                           
   748                           ;main_LCD.c: 38: PORTD = 0x03;
   749  07C6  3003               	movlw	3
   750  07C7  0088               	movwf	8	;volatile
   751                           
   752                           ;main_LCD.c: 39: _delay((unsigned long)((1)*(8000000UL/4000.0)));
   753  07C8  3003               	movlw	3
   754  07C9  00F1               	movwf	??_lcd_reset+1
   755  07CA  3097               	movlw	151
   756  07CB  00F0               	movwf	??_lcd_reset
   757  07CC                     u227:	
   758  07CC  0BF0               	decfsz	??_lcd_reset,f
   759  07CD  2FCC               	goto	u227
   760  07CE  0BF1               	decfsz	??_lcd_reset+1,f
   761  07CF  2FCC               	goto	u227
   762  07D0  2FD1               	nop2
   763                           
   764                           ;main_LCD.c: 40: PORTD = 0x03 + 0x20;
   765  07D1  3023               	movlw	35
   766  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   767  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   768  07D4  0088               	movwf	8	;volatile
   769                           
   770                           ;main_LCD.c: 41: PORTD = 0x03;
   771  07D5  3003               	movlw	3
   772  07D6  0088               	movwf	8	;volatile
   773                           
   774                           ;main_LCD.c: 42: _delay((unsigned long)((1)*(8000000UL/4000.0)));
   775  07D7  3003               	movlw	3
   776  07D8  00F1               	movwf	??_lcd_reset+1
   777  07D9  3097               	movlw	151
   778  07DA  00F0               	movwf	??_lcd_reset
   779  07DB                     u237:	
   780  07DB  0BF0               	decfsz	??_lcd_reset,f
   781  07DC  2FDB               	goto	u237
   782  07DD  0BF1               	decfsz	??_lcd_reset+1,f
   783  07DE  2FDB               	goto	u237
   784  07DF  2FE0               	nop2
   785                           
   786                           ;main_LCD.c: 43: PORTD = 0x02 + 0x20;
   787  07E0  3022               	movlw	34
   788  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   789  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   790  07E3  0088               	movwf	8	;volatile
   791                           
   792                           ;main_LCD.c: 44: PORTD = 0x02;
   793  07E4  3002               	movlw	2
   794  07E5  0088               	movwf	8	;volatile
   795                           
   796                           ;main_LCD.c: 45: _delay((unsigned long)((1)*(8000000UL/4000.0)));
   797  07E6  3003               	movlw	3
   798  07E7  00F1               	movwf	??_lcd_reset+1
   799  07E8  3097               	movlw	151
   800  07E9  00F0               	movwf	??_lcd_reset
   801  07EA                     u247:	
   802  07EA  0BF0               	decfsz	??_lcd_reset,f
   803  07EB  2FEA               	goto	u247
   804  07EC  0BF1               	decfsz	??_lcd_reset+1,f
   805  07ED  2FEA               	goto	u247
   806  07EE  2FEF               	nop2
   807  07EF  0008               	return
   808  07F0                     __end_of_lcd_reset:	
   809                           
   810                           	psect	text5
   811  06DC                     __ptext5:	
   812 ;; *************** function _lcd_cmd *****************
   813 ;; Defined at:
   814 ;;		line 48 in file "main_LCD.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  cmd             1    wreg     unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  cmd             1    1[COMMON] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0
   830 ;;      Temps:          1       0       0       0       0
   831 ;;      Totals:         2       0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_lcd_init
   838 ;;		_lcd_clear
   839 ;;		_lcd_return_home
   840 ;;		_lcd_entry_mode_set
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _lcd_cmd
   846  06DC                     _lcd_cmd:	
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
   850                           ;lcd_cmd@cmd stored from wreg
   851  06DC  00F1               	movwf	lcd_cmd@cmd
   852                           
   853                           ;main_LCD.c: 50: PORTD = (unsigned)((cmd >> 4) & 0x0F) | 0x20;
   854  06DD  0871               	movf	lcd_cmd@cmd,w
   855  06DE  00F0               	movwf	??_lcd_cmd
   856  06DF  3004               	movlw	4
   857  06E0                     u95:	
   858  06E0  1003               	clrc
   859  06E1  0CF0               	rrf	??_lcd_cmd,f
   860  06E2  3EFF               	addlw	-1
   861  06E3  1D03               	skipz
   862  06E4  2EE0               	goto	u95
   863  06E5  0870               	movf	??_lcd_cmd,w
   864  06E6  390F               	andlw	15
   865  06E7  3820               	iorlw	32
   866  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   867  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   868  06EA  0088               	movwf	8	;volatile
   869                           
   870                           ;main_LCD.c: 51: PORTD = (unsigned)((cmd >> 4) & 0x0F);
   871  06EB  0871               	movf	lcd_cmd@cmd,w
   872  06EC  00F0               	movwf	??_lcd_cmd
   873  06ED  3004               	movlw	4
   874  06EE                     u105:	
   875  06EE  1003               	clrc
   876  06EF  0CF0               	rrf	??_lcd_cmd,f
   877  06F0  3EFF               	addlw	-1
   878  06F1  1D03               	skipz
   879  06F2  2EEE               	goto	u105
   880  06F3  0870               	movf	??_lcd_cmd,w
   881  06F4  390F               	andlw	15
   882  06F5  0088               	movwf	8	;volatile
   883                           
   884                           ;main_LCD.c: 52: PORTD = (unsigned)(cmd & 0x0F) | 0x20;
   885  06F6  0871               	movf	lcd_cmd@cmd,w
   886  06F7  390F               	andlw	15
   887  06F8  3820               	iorlw	32
   888  06F9  0088               	movwf	8	;volatile
   889                           
   890                           ;main_LCD.c: 53: PORTD = (unsigned)(cmd & 0x0F);
   891  06FA  0871               	movf	lcd_cmd@cmd,w
   892  06FB  390F               	andlw	15
   893  06FC  0088               	movwf	8	;volatile
   894                           
   895                           ;main_LCD.c: 54: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   896  06FD  3085               	movlw	133
   897  06FE  00F0               	movwf	??_lcd_cmd
   898  06FF                     u257:	
   899  06FF  0BF0               	decfsz	??_lcd_cmd,f
   900  0700  2EFF               	goto	u257
   901                           
   902                           ;main_LCD.c: 55: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   903  0701  3085               	movlw	133
   904  0702  00F0               	movwf	??_lcd_cmd
   905  0703                     u267:	
   906  0703  0BF0               	decfsz	??_lcd_cmd,f
   907  0704  2F03               	goto	u267
   908  0705  0008               	return
   909  0706                     __end_of_lcd_cmd:	
   910                           
   911                           	psect	text6
   912  06A9                     __ptext6:	
   913 ;; *************** function _Init *****************
   914 ;; Defined at:
   915 ;;		line 18 in file "main_LCD.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _Init
   944  06A9                     _Init:	
   945                           
   946                           ;main_LCD.c: 19: OSCCON = 0x71;
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _Init: [wreg+status,2]
   950  06A9  3071               	movlw	113
   951  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   952  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   953  06AC  008F               	movwf	15	;volatile
   954                           
   955                           ;main_LCD.c: 20: ANSEL = 0x00;
   956  06AD  1683               	bsf	3,5	;RP0=1, select bank3
   957  06AE  1703               	bsf	3,6	;RP1=1, select bank3
   958  06AF  0188               	clrf	8	;volatile
   959                           
   960                           ;main_LCD.c: 21: ANSELH = 0x00;
   961  06B0  0189               	clrf	9	;volatile
   962                           
   963                           ;main_LCD.c: 22: PORTA = PORTB = PORTD = PORTD = PORTE = 0x00;
   964  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   965  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   966  06B3  0189               	clrf	9	;volatile
   967  06B4  0188               	clrf	8	;volatile
   968  06B5  0188               	clrf	8	;volatile
   969  06B6  0186               	clrf	6	;volatile
   970  06B7  0185               	clrf	5	;volatile
   971                           
   972                           ;main_LCD.c: 23: TRISA = TRISB = TRISC = TRISD = TRISE = 0x00;
   973  06B8  1683               	bsf	3,5	;RP0=1, select bank1
   974  06B9  1303               	bcf	3,6	;RP1=0, select bank1
   975  06BA  0189               	clrf	9	;volatile
   976  06BB  0188               	clrf	8	;volatile
   977  06BC  0187               	clrf	7	;volatile
   978  06BD  0186               	clrf	6	;volatile
   979  06BE  0185               	clrf	5	;volatile
   980  06BF  0008               	return
   981  06C0                     __end_of_Init:	
   982  007E                     btemp	set	126	;btemp
   983  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        61
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     61      61
    BANK1            80      0      61
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_send_string@str	PTR unsigned char  size(1) Largest target is 61
		 -> main@text(BANK0[61]), 


Critical Paths under _main in COMMON

    _main->_lcd_send_string
    _lcd_send_string->_lcd_data
    _lcd_init->_lcd_cmd
    _lcd_init->_lcd_reset

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0     325
                                              5 COMMON     4     4      0
                                              0 BANK0     61    61      0
                               _Init
                           _lcd_init
                    _lcd_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      3     2      1     213
                                              2 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      88
                            _lcd_cmd
                          _lcd_reset
 ---------------------------------------------------------------------------------
 (2) _lcd_reset                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _lcd_init
     _lcd_cmd
     _lcd_reset
   _lcd_send_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3D       7       76.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3D      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      83      12        0.0%
ABS                  0      0      83       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Oct 04 22:32:58 2017

             lcd_data@dat 0071                         pc 0002               __CFG_CP$OFF 0000  
                      l65 0768                        u95 06E0                        fsr 0004  
             __CFG_LVP$ON 0000                       l634 0696                       u105 06EE  
                     u115 070A                       u125 0718                       u207 07AE  
                     u160 073A                       u217 07BD                       u227 07CC  
                     u237 07DB                       u247 07EA                       u257 06FF  
                     u177 0761              __CFG_CPD$OFF 0000                       u267 0703  
                     u187 072B                       u197 072F                       fsr0 0004  
                     indf 0000                      _Init 06A9              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 0732     lcd_send_string@length 0072  
                    btemp 007E          ?_lcd_send_string 0072                      start 0000  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ?_Init 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
           __CFG_PWRTE$ON 0000           __end_of_lcd_cmd 0706            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 07F0              __end_of_Init 06C0              __end_of_main 0769  
                  ??_Init 0070                    ??_main 0075                    _ANSELH 0189  
                  _OSCCON 008F          __end_of_lcd_data 0732          __end_of_lcd_init 06DC  
               ??_lcd_cmd 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK1 0769        __size_of_lcd_reset 004A                __pmaintext 0732  
               ?_lcd_data 0070                 ?_lcd_init 0070         __end_of_lcd_reset 07F0  
__size_of_lcd_send_string 0014                   __ptext1 0695                   __ptext2 0706  
                 __ptext3 06C0                   __ptext4 07A6                   __ptext5 06DC  
                 __ptext6 06A9                   _lcd_cmd 06DC                ??_lcd_data 0070  
              ??_lcd_init 0072      end_of_initialization 07FC                lcd_cmd@cmd 0071  
      lcd_send_string@str 0074         ??_lcd_send_string 0073       start_initialization 07F0  
__CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 0684               __pdataBANK1 00A0  
               ___latbits 0002             __pcstackBANK0 0020         __size_of_lcd_data 002C  
       __size_of_lcd_init 001C                 _lcd_reset 07A6                  ?_lcd_cmd 0070  
               main@F1680 00A0                ?_lcd_reset 0070           _lcd_send_string 0695  
        __size_of_lcd_cmd 002A         __CFG_BOR4V$BOR40V 0000                  _lcd_data 0706  
                _lcd_init 06C0             __size_of_Init 0017             __size_of_main 0037  
                main@text 0020               ??_lcd_reset 0070                  init_ram0 0688  
 __end_of_lcd_send_string 06A9  
